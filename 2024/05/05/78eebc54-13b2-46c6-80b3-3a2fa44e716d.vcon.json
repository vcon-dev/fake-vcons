{"uuid": "78eebc54-13b2-46c6-80b3-3a2fa44e716d", "created_at": "2024-05-05T10:01:54.615331", "updated_at": "2024-05-05T10:01:54.615331", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/05/78eebc54-13b2-46c6-80b3-3a2fa44e716d.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-05T10:01:54.615300", "parties": [1, 0], "duration": 34.872, "filename": "78eebc54-13b2-46c6-80b3-3a2fa44e716d.mp3", "mimetype": "audio/mp3", "signature": "qgRxugHaqwbnOdG_J0qnwbAbNYUHwZNqm-OqhTh7pDRmK3mrnhu2tM-OEKlxr6cwr7ubTXUpCcnwzCmb3KOQMA"}], "parties": [{"tel": "+13497040608", "meta": {"role": "agent"}, "name": "James Bennett", "mailto": "james.bennett@cardealership.com"}, {"tel": "+17957760025", "meta": {"role": "customer"}, "name": "Christina James", "email": "christina.james@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "James Bennett", "customer_name": "Christina James", "business": "Car Dealership", "problem": "pricing", "emotion": "nervous", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-05T10:01:54.615320", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for contacting Bennett Motors. My name is James Bennett. May I have your name, please?"}, {"speaker": "Customer", "message": "Hi, I'm Christina James."}, {"speaker": "Agent", "message": "Nice to meet you, Christina. Could you please provide me with your phone number?"}, {"speaker": "Customer", "message": "Sure, it's five five five, six seven eight, nine zero one two."}, {"speaker": "Agent", "message": "Thank you. And may I also request your email address, please?"}, {"speaker": "Customer", "message": "Of course, it's c.james@email.com."}, {"speaker": "Agent", "message": "Thank you for sharing that information, Christina. Is there anything else I can assist you with today?"}, {"speaker": "Customer", "message": "Not at the moment, thank you."}, {"speaker": "Agent", "message": "You're welcome. Thank you for reaching out. Have a wonderful day, Christina."}, {"speaker": "Agent", "message": "End of conversation."}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}