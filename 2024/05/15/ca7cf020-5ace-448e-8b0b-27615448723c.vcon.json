{"uuid": "ca7cf020-5ace-448e-8b0b-27615448723c", "created_at": "2024-05-15T12:38:50.307556", "updated_at": "2024-05-15T12:38:50.307556", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/15/ca7cf020-5ace-448e-8b0b-27615448723c.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-15T12:38:50.307516", "parties": [1, 0], "duration": 65.04, "filename": "ca7cf020-5ace-448e-8b0b-27615448723c.mp3", "mimetype": "audio/mp3", "signature": "9QdwqoUo72XktskDcCCh1nCvAHyu4f3bHHRsXKmrF3b2i8pKHVSK1U544Pr55Wqo9y5jrmO2xGN_h_pD7tqYGA"}], "parties": [{"tel": "+14176452516", "meta": {"role": "agent"}, "name": "Russell Green", "mailto": "russell.green@bakery.com"}, {"tel": "+17938574213", "meta": {"role": "customer"}, "name": "Janice Ward", "email": "janice.ward@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Russell Green", "customer_name": "Janice Ward", "business": "Bakery", "problem": "pricing", "emotion": "relieved", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-15T12:38:50.307543", "model": "gpt-4o"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Good afternoon! Thank you for calling Sweet Treats Bakery customer support. My name is Russell Green, how can I assist you today?"}, {"speaker": "Customer", "message": "Hi Russell, my name is Janice Ward. I'm having some issues with the pricing of the cakes on your website."}, {"speaker": "Agent", "message": "I'm sorry to hear that, Janice. I'll do my best to help. Can you please tell me which specific cake you were looking at?"}, {"speaker": "Customer", "message": "Sure, it was the chocolate fudge cake."}, {"speaker": "Agent", "message": "Thank you for that information. And just to confirm, can I get your email address so I can follow up if necessary?"}, {"speaker": "Customer", "message": "Of course, it's janice.ward at email.com."}, {"speaker": "Agent", "message": "Thank you, Janice. Also, could you provide me with your phone number for further assistance?"}, {"speaker": "Customer", "message": "Certainly, it is five five five, one two three, four five six seven."}, {"speaker": "Agent", "message": "Perfect, I have all the information I need. It seems there was a temporary glitch on our website, which affected the pricing of the chocolate fudge cake. The correct price should be displayed now."}, {"speaker": "Customer", "message": "Oh, that\u2019s a relief! Thank you so much for your help, Russell."}, {"speaker": "Agent", "message": "You're welcome, Janice. Thank you for your patience and for contacting Sweet Treats Bakery. Have a sweet day!"}, {"speaker": "Customer", "message": "You too, goodbye!"}], "vendor_schema": {"model": "gpt-4o", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}