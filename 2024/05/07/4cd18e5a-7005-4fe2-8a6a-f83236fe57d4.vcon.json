{"uuid": "4cd18e5a-7005-4fe2-8a6a-f83236fe57d4", "created_at": "2024-05-07T16:35:40.672979", "updated_at": "2024-05-07T16:35:40.672979", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/07/4cd18e5a-7005-4fe2-8a6a-f83236fe57d4.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-07T16:35:40.672955", "parties": [1, 0], "duration": 59.784, "filename": "4cd18e5a-7005-4fe2-8a6a-f83236fe57d4.mp3", "mimetype": "audio/mp3", "signature": "fL_V1T8YYjPZp6wHTAH9UxtTYwov96XtJuqXM1y416qE3BBttMOkUSB1dXC9xtjLygB4GZegL-ZGRaFhFUMh1Q"}], "parties": [{"tel": "+11335823796", "meta": {"role": "agent"}, "name": "Patrick Nelson", "mailto": "patrick.nelson@hotel.com"}, {"tel": "+11460406928", "meta": {"role": "customer"}, "name": "Patricia Kelly", "email": "patricia.kelly@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Patrick Nelson", "customer_name": "Patricia Kelly", "business": "Hotel", "problem": "cleanliness", "emotion": "angry", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-07T16:35:40.672969", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for reaching out to CleanStay Solutions. My name is Patrick Nelson. May I have your name, please?"}, {"speaker": "Customer", "message": "Hello, my name is Patricia Kelly."}, {"speaker": "Agent", "message": "It's nice to meet you, Patricia. How can I assist you today?"}, {"speaker": "Customer", "message": "I recently stayed at one of your properties, and I was disappointed with the cleanliness. It was not up to my expectations."}, {"speaker": "Agent", "message": "I'm sorry to hear about your experience, Patricia. To better address your concerns, may I please have your room number and the date of your stay?"}, {"speaker": "Customer", "message": "My room number was two five six and I stayed on the twenty first of June."}, {"speaker": "Agent", "message": "Thank you for providing that information, Patricia. I will look into the matter and get back to you as soon as possible."}, {"speaker": "Customer", "message": "I appreciate your prompt attention to this matter."}, {"speaker": "Agent", "message": "Thank you for bringing this to our attention, Patricia. We strive to maintain high cleanliness standards for all our guests. Is there anything else I can assist you with today?"}, {"speaker": "Customer", "message": "No, that will be all for now. Thank you for your help."}, {"speaker": "Agent", "message": "You're welcome, Patricia. Thank you for your time and have a great day!"}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}