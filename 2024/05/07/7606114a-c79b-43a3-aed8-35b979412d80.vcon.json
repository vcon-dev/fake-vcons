{"uuid": "7606114a-c79b-43a3-aed8-35b979412d80", "created_at": "2024-05-07T16:57:39.991596", "updated_at": "2024-05-07T16:57:39.991596", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/07/7606114a-c79b-43a3-aed8-35b979412d80.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-07T16:57:39.991556", "parties": [1, 0], "duration": 40.032, "filename": "7606114a-c79b-43a3-aed8-35b979412d80.mp3", "mimetype": "audio/mp3", "signature": "7hcuD4WdKMThWO_iXOeB7f8G9DkIY0DiRysCychore1u98R3NS0cbFjkWAAs2Nssm_SLazFg7bZYiNbw5Wojsw"}], "parties": [{"tel": "+14713920537", "meta": {"role": "agent"}, "name": "Roger Parker", "mailto": "roger.parker@hotel.com"}, {"tel": "+13859778795", "meta": {"role": "customer"}, "name": "Melissa Evans", "email": "melissa.evans@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Roger Parker", "customer_name": "Melissa Evans", "business": "Hotel", "problem": "noisy neighbors", "emotion": "nervous", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-07T16:57:39.991580", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello! Thank you for reaching out to us at StayCo. My name is Roger Parker. May I have your name please?"}, {"speaker": "Customer", "message": "Hello, I'm Melissa Evans."}, {"speaker": "Agent", "message": "Nice to meet you, Melissa. How do you spell your last name?"}, {"speaker": "Customer", "message": "E-V-A-N-S."}, {"speaker": "Agent", "message": "Thank you, Melissa. Can you provide me with the last four digits of the phone number associated with your booking, just for verification purposes?"}, {"speaker": "Customer", "message": "Five six eight nine."}, {"speaker": "Agent", "message": "Great, thank you for that. Could you also confirm the check-in date of your reservation in the format day-month-year?"}, {"speaker": "Customer", "message": "Two four dash zero five dash two zero two three."}, {"speaker": "Agent", "message": "Thank you for confirming, Melissa. I will look into the noisy neighbor issue. I appreciate your patience and understanding. Have a great day!"}, {"speaker": "Agent", "message": "Thank you for reaching out."}, []], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}