{"uuid": "8cbeaf09-15bc-4e36-91e5-80a22957c39d", "created_at": "2024-05-03T20:29:17.511286", "updated_at": "2024-05-03T20:29:17.511286", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/03/8cbeaf09-15bc-4e36-91e5-80a22957c39d.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-03T20:29:17.511250", "parties": [1, 0], "duration": 57.624, "filename": "8cbeaf09-15bc-4e36-91e5-80a22957c39d.mp3", "mimetype": "audio/mp3", "signature": "Idxqsh73rkGQY0MVsGNxf9GqAEakzXsCFFXjJi_FGsJ5SqryvgfBRP8FGm1Vq46MMBcFcXMcblih5X1JTOO9tA"}], "parties": [{"tel": "+13333073131", "meta": {"role": "agent"}, "name": "Ryan Peterson", "mailto": "ryan.peterson@locksmith.com"}, {"tel": "+19330536094", "meta": {"role": "customer"}, "name": "Janet Walker", "email": "janet.walker@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Ryan Peterson", "customer_name": "Janet Walker", "business": "Locksmith", "problem": "billing", "emotion": "sad", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information. As part of the conversation, the customer should ask two questions.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should cover two or three topics, have back and forth between the parties, and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-03T20:29:17.511273", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for contacting Locksmith Solutions. My name is Ryan Peterson. May I have your name, please?"}, {"speaker": "Customer", "message": "Hi Ryan, my name is Janet Walker."}, {"speaker": "Agent", "message": "Nice to meet you, Janet. Can you provide me with your address and contact number for our records?"}, {"speaker": "Customer", "message": "Yes, my address is five five one Pine Street, and my contact number is eight one five three two zero nine four."}, {"speaker": "Agent", "message": "Thank you for the information, Janet. How can I assist you today? Do you have any questions about our billing process or services?"}, {"speaker": "Customer", "message": "Yes, can you clarify the payment options available? Also, do you offer emergency locksmith services for residential properties?"}, {"speaker": "Agent", "message": "We accept payment through credit card, debit card, and cash. Our emergency locksmith services cover residential properties round the clock. Is there anything else you would like to know?"}, {"speaker": "Customer", "message": "No, that answers my questions. Thank you, Ryan, for your assistance."}, {"speaker": "Agent", "message": "You're welcome, Janet. Thank you for reaching out to Locksmith Solutions. Have a great day!"}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information. As part of the conversation, the customer should ask two questions.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should cover two or three topics, have back and forth between the parties, and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}