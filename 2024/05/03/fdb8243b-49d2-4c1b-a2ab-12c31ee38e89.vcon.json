{"uuid": "fdb8243b-49d2-4c1b-a2ab-12c31ee38e89", "created_at": "2024-05-03T20:46:39.061720", "updated_at": "2024-05-03T20:46:39.061720", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/03/fdb8243b-49d2-4c1b-a2ab-12c31ee38e89.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-03T20:46:39.061690", "parties": [1, 0], "duration": 60.936, "filename": "fdb8243b-49d2-4c1b-a2ab-12c31ee38e89.mp3", "mimetype": "audio/mp3", "signature": "OsafXUzDgfj57hgDZINl0gMFNBj08JARZs8Yt3p3S0joyIe_jQgb0U1nqEB1fnJ-qMN3q0Ey8QyREgywLpokRg"}], "parties": [{"tel": "+18881954848", "meta": {"role": "agent"}, "name": "Nathan Peterson", "mailto": "nathan.peterson@drivingschool.com"}, {"tel": "+11878536078", "meta": {"role": "customer"}, "name": "Megan Green", "email": "megan.green@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Nathan Peterson", "customer_name": "Megan Green", "business": "Driving School", "problem": "billing", "emotion": "frustrated", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information. As part of the conversation, the customer should ask two questions.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should cover two or three topics, have back and forth between the parties, and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-03T20:46:39.061710", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for reaching out to Green Light Driving School. My name is Nathan Peterson and I'll be assisting you today. May I have your name please?"}, {"speaker": "Customer", "message": "Hi, I'm Megan Green."}, {"speaker": "Agent", "message": "Nice to meet you, Megan. How can I assist you today? Could you please provide me with your email address and phone number for verification purposes?"}, {"speaker": "Customer", "message": "Sure, my email address is meggreen@gmail.com and my phone number is five five five nine eight seven six."}, {"speaker": "Agent", "message": "Thank you, Megan. I've noted down your information. Do you have any questions about our billing process or any other concerns?"}, {"speaker": "Customer", "message": "Yes, can you explain the payment options available? How can I access my billing statement online?"}, {"speaker": "Agent", "message": "Certainly, Megan. We offer payment via credit card, PayPal, and bank transfer. You can access your billing statement by logging into your account on our website. Is there anything else you'd like to know?"}, {"speaker": "Customer", "message": "No, that covers it. Thank you for your help."}, {"speaker": "Agent", "message": "You're welcome, Megan. If you have any more questions in the future, don't hesitate to reach out. Have a great day!"}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information. As part of the conversation, the customer should ask two questions.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should cover two or three topics, have back and forth between the parties, and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}