{"uuid": "640e89a0-de16-49d9-8ce0-8a09897345e9", "created_at": "2024-05-04T10:26:58.102443", "updated_at": "2024-05-04T10:26:58.102443", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/04/640e89a0-de16-49d9-8ce0-8a09897345e9.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-04T10:26:58.102395", "parties": [1, 0], "duration": 40.584, "filename": "640e89a0-de16-49d9-8ce0-8a09897345e9.mp3", "mimetype": "audio/mp3", "signature": "HD4Zu_5Nm12d1WANDhKOAsN6k1luf8JHdot_m-2xf_qIczyis-LmI-RwvJHV55SRWJRLfQO7ExYnyBfrfR4FFQ"}], "parties": [{"tel": "+19855435672", "meta": {"role": "agent"}, "name": "Brandon Baker", "mailto": "brandon.baker@cardealership.com"}, {"tel": "+12074507005", "meta": {"role": "customer"}, "name": "Mary Collins", "email": "mary.collins@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Brandon Baker", "customer_name": "Mary Collins", "business": "Car Dealership", "problem": "pricing", "emotion": "happy", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-04T10:26:58.102426", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for contacting Baker Automotive. My name is Brandon Baker. May I have your name, please?"}, {"speaker": "Customer", "message": "Hello Brandon, my name is Mary Collins."}, {"speaker": "Agent", "message": "Nice to meet you, Mary. To assist you further, could you please provide me with the first four digits of your phone number?"}, {"speaker": "Customer", "message": "Sure, they are seven five six zero."}, {"speaker": "Agent", "message": "Thank you, Mary. Now, could you tell me the last two digits of your home address?"}, {"speaker": "Customer", "message": "Of course, they are nine one."}, {"speaker": "Agent", "message": "Thank you for sharing that information, Mary. Is there anything else I can assist you with today?"}, {"speaker": "Customer", "message": "No, Brandon. I'm happy with the help provided. Thank you."}, {"speaker": "Agent", "message": "You're welcome, Mary. If you have any more questions in the future, don't hesitate to reach out. Have a great day!"}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}