{"uuid": "717e5bd3-b189-4b24-a7a8-bf400b1c60ee", "created_at": "2024-05-04T10:17:23.121870", "updated_at": "2024-05-04T10:17:23.121870", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/04/717e5bd3-b189-4b24-a7a8-bf400b1c60ee.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-04T10:17:23.121814", "parties": [1, 0], "duration": 41.304, "filename": "717e5bd3-b189-4b24-a7a8-bf400b1c60ee.mp3", "mimetype": "audio/mp3", "signature": "pSNoKG0PzHgJjK5xuN7lPL_s67hjadjUA71t-WkmaqgW9SDbHNob-FzXMVoIouG0R5B6MwwdWGmTP6-EoIe47g"}], "parties": [{"tel": "+18666029063", "meta": {"role": "agent"}, "name": "Jerry Patterson", "mailto": "jerry.patterson@cardealership.com"}, {"tel": "+11313266284", "meta": {"role": "customer"}, "name": "Rachel Barnes", "email": "rachel.barnes@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Jerry Patterson", "customer_name": "Rachel Barnes", "business": "Car Dealership", "problem": "shipping", "emotion": "happy", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-04T10:17:23.121850", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for contacting Car Depot. My name is Jerry Patterson. May I have your name, please?"}, {"speaker": "Customer", "message": "Hi! My name is Rachel Barnes."}, {"speaker": "Agent", "message": "Nice to meet you, Rachel. Can you provide me with your phone number, spelled out digit by digit?"}, {"speaker": "Customer", "message": "Sure, it's seven zero three, four eight five, two one zero three."}, {"speaker": "Agent", "message": "Great, thank you. And may I also have your email address, spelled out carefully?"}, {"speaker": "Customer", "message": "Of course, it's rachel dot b a r n e s at g mail dot com."}, {"speaker": "Agent", "message": "Perfect, thank you for providing that information. Is there anything else I can assist you with today, Rachel?"}, {"speaker": "Customer", "message": "No, that's all for now. Thank you for your help."}, {"speaker": "Agent", "message": "You're welcome, Rachel. Thank you for choosing Car Depot. Have a wonderful day!"}, {"speaker": "Customer", "message": "You too! Goodbye."}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}