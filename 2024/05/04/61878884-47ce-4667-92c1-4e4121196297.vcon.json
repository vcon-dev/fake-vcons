{"uuid": "61878884-47ce-4667-92c1-4e4121196297", "created_at": "2024-05-04T09:15:04.675459", "updated_at": "2024-05-04T09:15:04.675459", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/04/61878884-47ce-4667-92c1-4e4121196297.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-04T09:15:04.675410", "parties": [1, 0], "duration": 36.312, "filename": "61878884-47ce-4667-92c1-4e4121196297.mp3", "mimetype": "audio/mp3", "signature": "IH3cg5g8vvnozNkn6AvQOVNhgKlcgtCdQ2Lb42khB2tTbXkjR0YLgzzjVLnr-OgTBDWHJRrOU_0lDRARs3ZklQ"}], "parties": [{"tel": "+11396214183", "meta": {"role": "agent"}, "name": "Christopher Patterson", "mailto": "christopher.patterson@cardealership.com"}, {"tel": "+15449815410", "meta": {"role": "customer"}, "name": "Danielle Perry", "email": "danielle.perry@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Christopher Patterson", "customer_name": "Danielle Perry", "business": "Car Dealership", "problem": "security", "emotion": "angry", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-04T09:15:04.675441", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for contacting Cars Connect. My name is Christopher Patterson. May I have your name, please?"}, {"speaker": "Customer", "message": "Hello, this is Danielle Perry."}, {"speaker": "Agent", "message": "Nice to meet you, Danielle. Could you please provide me with your date of birth?"}, {"speaker": "Customer", "message": "Sure, it's April thirteen, nineteen eighty-five."}, {"speaker": "Agent", "message": "Thank you. Can you also confirm the last four digits of your social security number?"}, {"speaker": "Customer", "message": "Of course, it's eight two six seven."}, {"speaker": "Agent", "message": "Thank you for sharing that information, Danielle. Is there anything else I can assist you with today?"}, {"speaker": "Customer", "message": "No, that will be all for now. Thank you."}, {"speaker": "Agent", "message": "Thank you for contacting us, Danielle. Have a great day!"}, {"speaker": "Customer", "message": "You're welcome. Goodbye."}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}