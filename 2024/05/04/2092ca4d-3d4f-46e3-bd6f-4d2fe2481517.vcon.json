{"uuid": "2092ca4d-3d4f-46e3-bd6f-4d2fe2481517", "created_at": "2024-05-04T13:08:17.641940", "updated_at": "2024-05-04T13:08:17.641940", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/04/2092ca4d-3d4f-46e3-bd6f-4d2fe2481517.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-04T13:08:17.641888", "parties": [1, 0], "duration": 42.576, "filename": "2092ca4d-3d4f-46e3-bd6f-4d2fe2481517.mp3", "mimetype": "audio/mp3", "signature": "FmXV4TL6P7vg6ucID_enb1W7U06t5etp6qmzBlxlkc17Xs4tdiQ9-A5vOgnYFdhxme1g2qzICnMTuSjgZZEwyg"}], "parties": [{"tel": "+12092319231", "meta": {"role": "agent"}, "name": "Mark Simmons", "mailto": "mark.simmons@cardealership.com"}, {"tel": "+18998784429", "meta": {"role": "customer"}, "name": "Sharon Stewart", "email": "sharon.stewart@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Mark Simmons", "customer_name": "Sharon Stewart", "business": "Car Dealership", "problem": "returns", "emotion": "happy", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-04T13:08:17.641923", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for contacting Speedy Auto Solutions. My name is Mark Simmons. May I have your name, please?"}, {"speaker": "Customer", "message": "Hello Mark, my name is Sharon Stewart."}, {"speaker": "Agent", "message": "Nice to meet you, Sharon. Can I have your date of birth for verification purposes?"}, {"speaker": "Customer", "message": "Sure, my date of birth is two two zero three zero two."}, {"speaker": "Agent", "message": "Thank you. Could you also provide the last four digits of your phone number for security verification?"}, {"speaker": "Customer", "message": "Of course, the last four digits of my phone number are eight five six one."}, {"speaker": "Agent", "message": "Great, thank you for providing that information, Sharon. Is there anything else I can assist you with today?"}, {"speaker": "Customer", "message": "No, everything seems fine. Thank you for your help, Mark."}, {"speaker": "Agent", "message": "You're welcome, Sharon. Thank you for reaching out to us. Have a wonderful day!"}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}