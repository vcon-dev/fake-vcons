{"uuid": "c955b209-7803-4e29-a984-dd00790ce0ca", "created_at": "2024-05-04T12:40:14.459206", "updated_at": "2024-05-04T12:40:14.459206", "dialog": [{"alg": "SHA-512", "url": "https://fake-vcons.s3.amazonaws.com/2024/05/04/c955b209-7803-4e29-a984-dd00790ce0ca.mp3", "meta": {"direction": "in", "disposition": "ANSWERED"}, "type": "recording", "start": "2024-05-04T12:40:14.459156", "parties": [1, 0], "duration": 39.216, "filename": "c955b209-7803-4e29-a984-dd00790ce0ca.mp3", "mimetype": "audio/mp3", "signature": "6l-EHGYjindzJ0fz7JLqXDfa9IFcA8Pu3bZMNnh4dONwWgACChVX1VFV01Rmo3KQn6egnpoBEe1Wqs_tPDJSGA"}], "parties": [{"tel": "+12213180935", "meta": {"role": "agent"}, "name": "Richard Parker", "mailto": "richard.parker@cardealership.com"}, {"tel": "+14320792501", "meta": {"role": "customer"}, "name": "Madison Griffin", "email": "madison.griffin@gmail.com"}], "attachments": [{"type": "generation_info", "encoding": "none", "body": {"agent_name": "Richard Parker", "customer_name": "Madison Griffin", "business": "Car Dealership", "problem": "data management", "emotion": "happy", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n", "created_on": "2024-05-04T12:40:14.459189", "model": "gpt-3.5-turbo"}}], "analysis": [{"type": "transcript", "dialog": 0, "vendor": "openai", "encoding": "none", "body": [{"speaker": "Agent", "message": "Hello, thank you for contacting Data Solutions. This is Richard Parker. May I have your name, please?"}, {"speaker": "Customer", "message": "Hi, my name is Madison Griffin."}, {"speaker": "Agent", "message": "Nice to meet you, Madison. Could you provide me with your email address and phone number for our records?"}, {"speaker": "Customer", "message": "Sure, my email address is m.griffin@example.com and my phone number is five five five, six two three, eight nine zero one."}, {"speaker": "Agent", "message": "Thank you, Madison. I have noted your email address and phone number in our system."}, {"speaker": "Customer", "message": "Great, thank you for your help."}, {"speaker": "Agent", "message": "You're welcome, Madison. If you have any further questions or concerns, feel free to reach out. Thank you for your time."}, {"speaker": "Customer", "message": "Thank you, have a great day!"}, {"speaker": "Agent", "message": "You too, Madison. Goodbye."}], "vendor_schema": {"model": "gpt-3.5-turbo", "prompt": "\nGenerate a fake conversation between a customer and an agent.\nThe agent should introduce themselves, their company and give the customer\ntheir name. The agent should ask for the customer's name.\nAs part of the conversation, have the agent ask for two pieces of\npersonal information.  Spell out numbers. For example, 1000 should be\nsaid as one zero zero zero, not one thousand. The conversation should be\nat least 10 lines long and be complete. At the end\nof the conversation, the agent should thank the customer for their time\nand end the conversation. Return the conversation formatted \nlike the following example:\n\n{'conversation': \n    [\n    {'speaker': 'Agent', 'message': 'xxxxx'}, \n    {'speaker': 'Customer', 'message': \"xxxxx.\"}, \n    {'speaker': 'Agent', 'message': \"xxxxxx\"}\n    ] \n}\n"}}]}